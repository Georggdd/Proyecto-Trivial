generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/* ──────────────────────────────────────────────
   Esquema corregido (sección Controller-Ranking)
   ────────────────────────────────────────────── */

/* 1️⃣  Tabla pivot M-N Partida ↔ RespuestaPartida */
model partidatorespuestapartida {
  A String
  B String

  @@unique([A, B], map: "PartidaResp_AB_uq")   //  ≤64 chars
  @@index([B],      map: "PartidaResp_B_idx")
  @@map("_partidatorespuestapartida")
}

/* 2️⃣  Casillas del tablero */
model casilla {
  id       String       @id @default(uuid())
  tipo     casilla_tipo
  efecto   String
  posicion Int
}

/* 3️⃣  Grupo que compite en la partida */
model grupo {
  id            String            @id @default(uuid())
  nombre        String
  foto          String?
  activo        Boolean           @default(true)
  partidaId     String
  partida       partida           @relation(fields: [partidaId], references: [id])
  integrantes   integrante[]
  puntuaciones  puntuaciongrupo[]
  respuestas    respuestapartida[]

  @@index([partidaId], map: "Grupo_partidaId_idx")
}

/* 4️⃣  Miembros del grupo */
model integrante {
  id       String  @id @default(uuid())
  nombre   String
  grupoId  String
  grupo    grupo   @relation(fields: [grupoId], references: [id])

  @@index([grupoId], map: "Integrante_grupoId_idx")
}

/* 5️⃣  Partida */
model partida {
  id            String          @id @default(uuid())
  codigo        String          @unique(map: "Partida_codigo_uq")
  estado        partida_estado
  fechaCreacion DateTime        @default(now())
  profesorId    String
  grupos        grupo[]
  puntuaciones  puntuaciongrupo[]
}

/* 6️⃣  Preguntas y respuestas */
model pregunta {
  id          String              @id @default(uuid())
  asignatura  pregunta_asignatura
  dificultad  pregunta_dificultad
  texto       String
  respuestas  respuesta[]
  respuestasDadas respuestapartida[]
}

model respuesta {
  id          String    @id @default(uuid())
  preguntaId  String
  texto       String
  esCorrecta  Boolean
  pregunta    pregunta  @relation(fields: [preguntaId], references: [id])
  respuestasDadas respuestapartida[]

  @@index([preguntaId], map: "Respuesta_preguntaId_idx")
}

/* 7️⃣  Respuesta que un grupo da durante la partida */
model respuestapartida {
  id              String    @id @default(uuid())
  grupoId         String
  preguntaId      String
  respuestaId     String
  esCorrecta      Boolean
  puntosObtenidos Int
  comodinActivado Boolean   @default(false)

  grupo       grupo     @relation(fields: [grupoId],     references: [id])
  pregunta    pregunta  @relation(fields: [preguntaId],  references: [id])
  respuesta   respuesta @relation(fields: [respuestaId], references: [id])

  @@index([grupoId],    map: "RespPart_grupoId_idx")
  @@index([preguntaId], map: "RespPart_preguntaId_idx")
  @@index([respuestaId],map: "RespPart_respuestaId_idx")
}

/* 8️⃣  Puntuación acumulada de cada grupo */
model puntuaciongrupo {
  id            String   @id @default(uuid())
  grupoId       String   @unique(map: "Puntuacion_grupoId_uq")
  partidaId     String
  puntosTotales Int

  grupo   grupo   @relation(fields: [grupoId],   references: [id])
  partida partida @relation(fields: [partidaId], references: [id])

  @@index([partidaId], map: "Puntuacion_partidaId_idx")
}

/* 9️⃣  Usuarios de la plataforma */
model usuario {
  id       String @id @default(uuid())
  usuario  String @unique
  password String
}

/* ─── Enumeraciones ─────────────────────────── */

enum casilla_tipo {
  normal
  suerte
  mala_suerte
}

enum partida_estado {
  esperando
  en_curso
  finalizada
}

enum pregunta_dificultad {
  facil
  intermedia
  dificil
}

enum pregunta_asignatura {
  Matematicas
  Historia
  Ciencias
  Lengua
  Ingles
}
