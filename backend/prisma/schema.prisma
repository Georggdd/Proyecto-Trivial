// ──────────────────────────────────────────────
//  GENERATOR & DATASOURCE
// ──────────────────────────────────────────────
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")   // ← define la URL en .env
}

// ──────────────────────────────────────────────
//  ENUMS
// ──────────────────────────────────────────────
enum Dificultad {
  facil
  media
  dificil
}

enum EstadoPartida {
  EN_CURSO
  TERMINADA
}

// ──────────────────────────────────────────────
//  MODELOS
// ──────────────────────────────────────────────
model Categoria {
  id         Int        @id @default(autoincrement())
  nombre     String     @unique
  preguntas  Pregunta[]

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Pregunta {
  id          Int          @id @default(autoincrement())
  texto        String
  dificultad   Dificultad
  puntuacion   Int          @default(10)

  // FK → Categoria
  categoriaId  Int
  categoria    Categoria    @relation(fields: [categoriaId], references: [id])

  respuestas   Respuesta[]

  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Respuesta {
  id          Int       @id @default(autoincrement())
  texto        String
  esCorrecta   Boolean
  explicacion  String?

  // FK → Pregunta
  preguntaId   Int
  pregunta     Pregunta  @relation(fields: [preguntaId], references: [id])

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Partida {
  id         Int            @id @default(autoincrement())
  codigo     String         @unique
  estado     EstadoPartida  @default(EN_CURSO)

  equipos    Equipo[]

  profesorId Int?           // opcional
  profesor   Usuario? @relation(fields: [profesorId], references: [id])

  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
}

model Equipo {
  id          Int       @id @default(autoincrement())
  nombre      String
  integrantes String
  puntos      Int       @default(0)

  // FK → Partida
  partidaId   Int
  partida     Partida   @relation(fields: [partidaId], references: [id])
  avatarMini  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([partidaId])
}

model Usuario {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  rol      String @default("ADMIN")

  Partida  Partida[]
}

/* ──────────────────────────────────────────────
   PREGUNTAS PERSONALIZADAS (tabla aparte)
   ────────────────────────────────────────────── */

model Customizable {
  id                 Int     @id @default(autoincrement())
  pregunta           String
  opcion1            String
  opcion2            String
  opcion3            String
  opcion4            String
  respuesta_correcta String
  puntuacion         Int     @default(10)      // usa mismo rango que Pregunta
  dificultad         Dificultad
  explicacion        String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
