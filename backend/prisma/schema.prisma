// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ──────────────────────────────────────────────
//  MODELOS DE USO GENERAL
// ──────────────────────────────────────────────

model usuario {
  id       String @id @default(uuid())
  usuario  String @unique
  password String

  // si luego quisieras relación con partida → profesorId
  Partidas Partida[] @relation("ProfesorPartidas")
}

model partida {
  id            String                  @id @default(uuid())
  codigo        String                  @unique(map: "Partida_codigo_key")
  estado        partida_estado
  profesorId    String?
  fechaCreacion DateTime                @default(now())
  equipos       grupo[]                 @relation("PartidaGrupos")

  @@index([profesorId], map: "Partida_profesorId_fkey")
}

model grupo {
  id                Int                  @id @default(autoincrement())
  nombre            String
  foto              String?
  activo            Boolean              @default(true)
  partidaId         String
  puntosTotales     puntuaciongrupo?
  respuestapartidas respuestapartida[]

  partida           partida              @relation("PartidaGrupos", fields: [partidaId], references: [id])

  @@index([partidaId], map: "Grupo_partidaId_fkey")
}

model integrante {
  id      String @id @default(uuid())
  nombre  String
  grupoId Int

  grupo   grupo  @relation(fields: [grupoId], references: [id])

  @@index([grupoId], map: "Integrante_grupoId_fkey")
}

model casilla {
  id       String       @id @default(uuid())
  tipo     casilla_tipo
  efecto   String
  posicion Int
}

// Tabla de unión histórica (si la sigues usando)
model partidatorespuestapartida {
  A String
  B String

  @@unique([A, B], map: "_PartidaToRespuestaPartida_AB_unique")
  @@index([B], map: "_PartidaToRespuestaPartida_B_index")
  @@map("_partidatorespuestapartida")
}


// ──────────────────────────────────────────────
//  MODELOS DE PREGUNTAS Y RESPUESTAS
// ──────────────────────────────────────────────

model categoria {
  id        String     @id @default(uuid())
  nombre    String     @unique
  preguntas pregunta[]
}

model pregunta {
  id                String              @id @default(uuid())
  texto             String
  dificultad        pregunta_dificultad
  categoriaId       String
  categoria         categoria           @relation(fields: [categoriaId], references: [id])
  respuestas        respuesta[]
  respuestapartidas respuestapartida[]

  @@index([categoriaId], map: "Pregunta_categoriaId_idx")
}

model respuesta {
  id                String             @id @default(uuid())
  texto             String
  esCorrecta        Boolean
  explicacion       String?
  preguntaId        String
  pregunta          pregunta           @relation(fields: [preguntaId], references: [id])
  respuestapartidas respuestapartida[]

  @@index([preguntaId], map: "Respuesta_preguntaId_fkey")
}

model respuestapartida {
  id              String  @id @default(uuid())
  grupoId         Int
  preguntaId      String
  respuestaId     String
  esCorrecta      Boolean
  puntosObtenidos Int
  comodinActivado Boolean @default(false)

  grupo     grupo     @relation(fields: [grupoId], references: [id])
  pregunta  pregunta  @relation(fields: [preguntaId], references: [id])
  respuesta respuesta @relation(fields: [respuestaId], references: [id])

  @@index([grupoId], map: "RespuestaPartida_grupoId_fkey")
  @@index([preguntaId], map: "RespuestaPartida_preguntaId_fkey")
  @@index([respuestaId], map: "RespuestaPartida_respuestaId_fkey")
}

model puntuaciongrupo {
  id            Int    @id @default(autoincrement())
  grupoId       Int    @unique(map: "PuntuacionGrupo_grupoId_key")
  partidaId     String
  puntosTotales Int

  grupo   grupo   @relation(fields: [grupoId], references: [id])
  partida partida @relation(fields: [partidaId], references: [id])
}


// ──────────────────────────────────────────────
//  MODELOS DE PREGUNTAS CUSTOMIZADAS
// ──────────────────────────────────────────────

model customizable {
  id                 Int     @id @default(autoincrement())
  pregunta           String
  opcion1            String
  opcion2            String
  opcion3            String
  opcion4            String
  respuesta_correcta String
  puntuacion         Int     @default(10)
  dificultad         Int
  explicacion        String?
  custom             Boolean @default(true)
}


// ──────────────────────────────────────────────
//  ENUMS
// ──────────────────────────────────────────────

enum pregunta_asignatura {
  Matematicas
  Historia
  Ciencias
  Lengua
  Ingles
  Musica
}

enum partida_estado {
  esperando
  en_curso
  finalizada
}

enum casilla_tipo {
  normal
  suerte
  mala_suerte
}

enum pregunta_dificultad {
  facil
  media
  dificil
}