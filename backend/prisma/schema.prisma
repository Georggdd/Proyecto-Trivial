generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model partidatorespuestapartida {
  A String
  B String

  @@unique([A, B], map: "_PartidaToRespuestaPartida_AB_unique")
  @@index([B], map: "_PartidaToRespuestaPartida_B_index")
  @@map("_partidatorespuestapartida")
}

model casilla {
  id       String       @id @default(uuid())
  tipo     casilla_tipo
  efecto   String
  posicion Int
}

model Equipo {
  id        Int      @id @default(autoincrement())
  nombre    String
  imagen    String?
  partidaId Int
  partida   Partida  @relation(fields: [partidaId], references: [id])
}

model integrante {
  id      String @id @default(uuid())
  nombre  String
  grupoId String

  @@index([grupoId], map: "Integrante_grupoId_fkey")
}

model Partida {
  id        Int        @id @default(autoincrement())
  nombre    String
  preguntas Pregunta[]
  equipos   Equipo[]  
}

model Pregunta {
  id          Int         @id @default(autoincrement())
  texto       String
  asignatura  String
  dificultad  String
  partidaId   Int
  partida     Partida     @relation(fields: [partidaId], references: [id])
  respuestas  Respuesta[]
}

model puntuaciongrupo {
  id            String @id
  grupoId       String @unique(map: "PuntuacionGrupo_grupoId_key")
  partidaId     String
  puntosTotales Int

  @@index([partidaId], map: "PuntuacionGrupo_partidaId_fkey")
}

model Respuesta {
  id         Int      @id @default(autoincrement())
  texto      String
  esCorrecta Boolean
  preguntaId Int
  pregunta   Pregunta @relation(fields: [preguntaId], references: [id])
}

model respuestapartida {
  id              String  @id  @default(uuid())
  grupoId         String
  preguntaId      String
  respuestaId     String
  esCorrecta      Boolean
  puntosObtenidos Int
  comodinActivado Boolean @default(false)

  @@index([grupoId], map: "RespuestaPartida_grupoId_fkey")
  @@index([preguntaId], map: "RespuestaPartida_preguntaId_fkey")
  @@index([respuestaId], map: "RespuestaPartida_respuestaId_fkey")
}

model tirada {
  id          String   @id @default(uuid())
  grupoId     String
  partidaId   String
  valorDado   Int
  casillaId   String
  fechaTirada DateTime @default(now())

  @@index([casillaId], map: "Tirada_casillaId_fkey")
  @@index([grupoId], map: "Tirada_grupoId_fkey")
  @@index([partidaId], map: "Tirada_partidaId_fkey")
}

model usuario {
  id       String @id @default(uuid())
  usuario  String @unique
  password String
}

enum pregunta_asignatura {
  idioma
  musica
  matematicas
  biologia
  geografia
  lengua
}

enum casilla_tipo {
  normal
  suerte
  mala_suerte
}

enum partida_estado {
  esperando
  en_curso
  finalizada
}

enum pregunta_dificultad {
  facil
  intermedia
  dificil
}

enum usuario_rol {
  admin
  profesor
}