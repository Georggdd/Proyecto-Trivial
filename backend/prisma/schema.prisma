generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ──────────────────────────────────────────────
//  ENUMS
// ──────────────────────────────────────────────

enum UsuarioRol {
  ADMIN
  PROFESOR
}

enum EstadoPartida {
  ESPERANDO
  EN_CURSO
  FINALIZADA
}

enum CasillaTipo {
  normal
  suerte
  mala_suerte
}

enum PreguntaDificultad {
  facil
  media
  dificil
}

// ──────────────────────────────────────────────
//  MODELOS DE USO GENERAL
// ──────────────────────────────────────────────

model Usuario {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  rol       UsuarioRol @default(PROFESOR)

  Partidas  Partida[]  @relation("ProfesorPartidas")
}

// ──────────────────────────────────────────────
//  PARTIDA, EQUIPO E INTEGRANTES
// ──────────────────────────────────────────────

model Partida {
  id            Int       @id @default(autoincrement())
  codigo        String    @unique
  estado        EstadoPartida @default(EN_CURSO)
  profesorId    Int?
  fechaCreacion DateTime  @default(now())

  Equipos       Equipo[]   @relation("PartidaEquipos")
  profesor      Usuario?   @relation("ProfesorPartidas", fields: [profesorId], references: [id])

  @@index([profesorId])
  PuntuacionGrupo PuntuacionGrupo[]
}

model Equipo {
  id            Int       @id @default(autoincrement())
  nombre        String
  integrantes   String
  puntos        Int       @default(0)
  avatarMini    String?

  partidaId     Int
  partida       Partida   @relation("PartidaEquipos", fields: [partidaId], references: [id])

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  Respuestas    RespuestaPartida[]  // histórico de respuestas
  Puntuacion    PuntuacionGrupo?

  @@index([partidaId])
}

// ──────────────────────────────────────────────
//  PREGUNTAS Y RESPUESTAS
// ──────────────────────────────────────────────

model Categoria {
  id         Int        @id @default(autoincrement())
  nombre     String     @unique
  preguntas  Pregunta[]

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Pregunta {
  id                Int                  @id @default(autoincrement())
  texto             String
  dificultad        PreguntaDificultad
  puntuacion        Int                  @default(10)

  categoriaId       Int
  categoria         Categoria            @relation(fields: [categoriaId], references: [id])

  respuestas        Respuesta[]
  respuestasPartida RespuestaPartida[]

  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt

  @@index([categoriaId])
}

model Respuesta {
  id                Int                  @id @default(autoincrement())
  texto             String
  esCorrecta        Boolean
  explicacion       String?

  preguntaId        Int
  pregunta          Pregunta             @relation(fields: [preguntaId], references: [id])

  respuestasPartida RespuestaPartida[]

  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt

  @@index([preguntaId])
}

// ──────────────────────────────────────────────
//  HISTÓRICO DE RESPUESTAS EN PARTIDA
// ──────────────────────────────────────────────

model RespuestaPartida {
  id              Int       @id @default(autoincrement())
  equipoId        Int       // antes era grupoId
  preguntaId      Int
  respuestaId     Int
  esCorrecta      Boolean
  puntosObtenidos Int

  equipo          Equipo    @relation(fields: [equipoId], references: [id])
  pregunta        Pregunta  @relation(fields: [preguntaId], references: [id])
  respuesta       Respuesta @relation(fields: [respuestaId], references: [id])

  @@index([equipoId])
  @@index([preguntaId])
  @@index([respuestaId])
}

// ──────────────────────────────────────────────
//  PUNTUACIÓN AGREGADA POR EQUIPO
// ──────────────────────────────────────────────

model PuntuacionGrupo {
  id            Int     @id @default(autoincrement())
  equipoId      Int     @unique
  partidaId     Int
  puntosTotales Int

  equipo        Equipo   @relation(fields: [equipoId], references: [id])
  partida       Partida  @relation(fields: [partidaId], references: [id])

  @@index([equipoId])
  @@index([partidaId])
}

// ──────────────────────────────────────────────
//  PREGUNTAS CUSTOMIZADAS
// ──────────────────────────────────────────────

model Customizable {
  id                 Int     @id @default(autoincrement())
  pregunta           String
  opcion1            String
  opcion2            String
  opcion3            String
  opcion4            String
  respuesta_correcta String
  puntuación         Int     @default(10)
  explicación        String?
  esCustom           Boolean @default(true)

  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
